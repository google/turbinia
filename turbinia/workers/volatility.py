# -*- coding: utf-8 -*-
# Copyright 2015 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Task for executing volatility."""

from __future__ import unicode_literals

import os
import re
import subprocess

from turbinia.evidence import TextFile
from turbinia.workers import TurbiniaTask


class VolatilityTask(TurbiniaTask):
  """Task to execute volatility."""

  def __init__(self, module='test'):
    super(VolatilityTask, self).__init__()
    self.module = module

  def run(self, evidence, result):
    """Task to execute volatility."""

    # Create the new Evidence object that will be generated by this Task.
    output_evidence = TextFile()
    # Create a path that we can write the new file to.
    # base_name = os.path.basename(evidence.local_path)
    output_file_path = os.path.join(
        self.output_dir, '{0:s}.txt'.format(self.id))

    output_evidence.local_path = output_file_path

    # TODO: Add in config options for Turbinia
    cmd = 'python2 /bin/vol -f {0:s} --profile={1:s} {2:s} \
            --output=text --output-file={3:s}'.format(
        evidence.local_path, evidence.profile, self.module, output_file_path)
    result.log('Running vol as [{0:s}]'.format(cmd))
    self.execute(
        cmd, result, new_evidence=[output_evidence], close=True, shell=True)

    return result
