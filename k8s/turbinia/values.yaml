## Turbinia Helm Chart
## Please use this Helm chart for deploying Turbinia to a Kubernetes environment
##
## @section Turbinia configuration
## The following section covers configuration parameters for Turbinia
##
## Turbinia server configuration
##
server:
  image:
    ## @param image.repository Turbinia image repository
    ##
    repository: us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-server
    ## @param image.pullPolicy Turbinia image pull policy
    ## ref https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    ##
    pullPolicy: IfNotPresent
    ## @param image.tag Overrides the image tag whose default is the chart appVersion
    ##
    tag: latest
    ## @param image.imagePullSecrets
    ## ref https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
  ## @param podSecurityContext server.PodSecurityContext holds pod-level security attributes and common worker container settings
  ## Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podsecuritycontext-v1-core
  ## e.g.
  ## fsgroup: 2000
  ##
  podSecurityContext: {}
  ## @param SecurityContext server.SecurityContext holds security configuration that will be applied to the worker container
  ## Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#securitycontext-v1-core
  ## e.g.
  ## capabilities
  ##   drop:
  ##   - ALL
  ## readOnlyRootFilesystem: true
  ## runAsNonRoot: true
  ## runAsUser: 1000
  ##
  securityContext: {}
  ## Turbinia Server resource requests and limits
  ## @param server.resources.requests.cpu The requested cpu for the frontend container
  ## @param server.resources.requests.memory The requested memory for the frontend container
  ## @param server.resources.limits.cpu The resources cpu limits for the frontend container
  ## @param server.resources.limits.memory The resources memory limits for the frontend container
  ##
  resources:
    requests:
      cpu: 1000m
      memory: 2000Mi
    limits:
      cpu: 8000m
      memory: 16000Mi
  ## @param server.nodeSelector Node labels for Turbinia server pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param server.tolerations Tolerations for Turbinia server pods assignment
  ## ref https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  tolerations: []
  ## @param server.affinity Affinity for Turbinia server pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
## Turbinia worker configuration
##
worker:
  image:
    ## @param worker.image.repository Turbinia image repository
    ##
    repository: us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-worker
    ## @param worker.image.pullPolicy Turbinia image pull policy
    ## ref https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    ##
    pullPolicy: IfNotPresent
    ## @param worker.image.tag Overrides the image tag whose default is the chart appVersion
    ##
    tag: latest
    ## @param worker.image.imagePullSecrets
    ## ref https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
  ## @param worker.replicaCount The number of worker pods to run at once
  ## Disabled if the value worker.autoscaling.enabled is enabled.
  replicaCount: 5
  ## Worker autoscaler configuration
  ## ref https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  autoscaling:
    ## @param worker.autoscaling.enabled Enables Turbinia Worker autoscaling
    ##
    enabled: true
    ## @param worker.autoscaling.minReplicas The minimum amount of worker pods to run at once
    ##
    minReplicas: 5
    ## @param worker.autoscaling.maxReplicas The maximum amount of worker pods to run at once
    ##
    maxReplicas: 500
    ## @param worker.autoscaling.targetCPUUtilizationPercentage The cpu scaling metric workers will scale based on
    ##
    targetCPUUtilizationPercentage: 80
  ## @param podSecurityContext worker.PodSecurityContext holds pod-level security attributes and common worker container settings
  ## Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podsecuritycontext-v1-core
  ## e.g.
  ## fsgroup: 2000
  ##
  podSecurityContext: {}
  ## @param SecurityContext worker.SecurityContext holds security configuration that will be applied to the worker container
  ## Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#securitycontext-v1-core
  ## The Worker is set to be a privileged container as it requires access to the nodes resources for disk attachments
  ##
  securityContext:
    privileged: true
  ## Turbinia Worker resource requests and limits
  ## @param worker.resources.requests.cpu The requested cpu for the worker container
  ## @param worker.resources.requests.memory The requested memory for the worker container
  ## @param worker.resources.limits.cpu The resources cpu limits for the worker container
  ## @param worker.resources.limits.memory The resources memory limits for the worker container
  ##
  resources:
    requests:
      cpu: 1500m
      memory: 2048Mi
    limits:
      cpu: 31000m
      memory: 65536Mi
  ## @param worker.nodeSelector Node labels for Turbinia worker pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param worker.tolerations Tolerations for Turbinia worker pods assignment
  ## ref https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  tolerations: []
  ## @param worker.affinity Affinity for Turbinia worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
## Turbinia API / Web configuration
##
api:
  image:
    ## @param api.image.repository Turbinia image repository for API / Web server
    ##
    repository: us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-api-server
    ## @param api.image.pullPolicy Turbinia image pull policy
    ## ref https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    ##
    pullPolicy: IfNotPresent
    ## @param api.image.tag Overrides the image tag whose default is the chart appVersion
    ##
    tag: latest
    ## @param api.image.imagePullSecrets
    ## ref https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
  ## @param api.podSecurityContext PodSecurityContext holds pod-level security attributes and common API / Web container settings
  ## Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podsecuritycontext-v1-core
  ## e.g.
  ## fsgroup: 2000
  ##
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  ## @param api.SecurityContext SecurityContext holds security configuration that will be applied to the API / Web container
  ## Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#securitycontext-v1-core
  ## e.g.
  ## capabilities
  ##   drop:
  ##   - ALL
  ## readOnlyRootFilesystem: true
  ## runAsNonRoot: true
  ## runAsUser: 1000
  ##
  securityContext: {}
  ## Turbinia API / Web resource requests and limits
  ## @param api.resources.requests.cpu The requested cpu for the frontend container
  ## @param api.resources.requests.memory The requested memory for the frontend container
  ## @param api.resources.limits.cpu The resources cpu limits for the frontend container
  ## @param api.resources.limits.memory The resources memory limits for the frontend container
  ##
  resources:
    requests:
      cpu: 2000m
      memory: 4000Mi
    limits:
      cpu: 8000m
      memory: 16000Mi
  ## @param api.nodeSelector Node labels for Turbinia api pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param api.tolerations Tolerations for Turbinia api pods assignment
  ## ref https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  tolerations: []
  ## @param api.affinity Affinity for Turbinia api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
## Turbinia controller configuration
## The controller is not required to use Turbinia and serves as an extra
## container that can be used for troubleshooting
##
controller:
  ## @param controller.enabled If enabled, deploys the Turbinia controller
  ##
  enabled: false
  image:
    ## @param controller.image.repository Turbinia image repository for the Turbinia controller
    ##
    repository: us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-controller
    ## @param controller.image.pullPolicy Turbinia image pull policy
    ## ref https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
    ##
    pullPolicy: IfNotPresent
    ## @param controller.image.tag Overrides the image tag whose default is the chart appVersion
    ##
    tag: latest
    ## @param controller.image.imagePullSecrets
    ## ref https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g.
    ## imagePullSecrets:
    ##   - myRegistryKeySecretName
    ##
    imagePullSecrets: []
  ## @param controller.podSecurityContext PodSecurityContext holds pod-level security attributes and common API / Web container settings
  ## Some fields are also present in container.securityContext. Field values of container.securityContext take precedence over field values of PodSecurityContext
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podsecuritycontext-v1-core
  ## e.g.
  ## fsgroup: 2000
  ##
  podSecurityContext: {}
  ## @param controller.SecurityContext SecurityContext holds security configuration that will be applied to the API / Web container
  ## Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence
  ## ref https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#securitycontext-v1-core
  ## e.g.
  ## capabilities
  ##   drop:
  ##   - ALL
  ## readOnlyRootFilesystem: true
  ## runAsNonRoot: true
  ## runAsUser: 1000
  ##
  securityContext: {}
  ## Turbinia controller resource requests and limits
  ## @param controller.resources.requests.cpu The requested cpu for the controller container
  ## @param controller.resources.requests.memory The requested memory for the controller container
  ## @param controller.resources.limits.cpu The resources cpu limits for the controller container
  ## @param controller.resources.limits.memory The resources memory limits for the controller container
  ##
  resources:
    requests:
      cpu: 1000m
      memory: 2000Mi
    limits:
      cpu: 4000m
      memory: 4000Mi
  ## @param controller.nodeSelector Node labels for Turbinia controller pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param controller.tolerations Tolerations for Turbinia controller pods assignment
  ## ref https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ##
  tolerations: []
  ## @param controller.affinity Affinity for Turbinia controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
## @param nameOverride String to partially override names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override names.fullname
##
fullnameOverride: ""
## Turbinia configuration parameters
## ref: https://github.com/google/turbinia/blob/master/turbinia/config/turbinia_config_tmpl.py
## 
config:
  ## @param config.override Overrides the default Turbinia config to instead use a user specified config. Please ensure
  ## that the config file is either placed in the root of this directory or point the override flag to a path containing
  ## your config file
  ##
  override: turbinia.conf
  ## @param config.disabledJobs List of Turbinia Jobs to disable. Overrides DISABLED_JOBS in the Turbinia config.
  disabledJobs: "['BinaryExtractorJob', 'BulkExtractorJob', 'HindsightJob', 'PhotorecJob', 'VolatilityJob']"
## GCP configuration parameters
## IMPORTANT: The Turbinia Helm chart only supports GCP at the moment due to 
## missing functionality with attaching and detaching cloud disks for other providers
##
gcp:
  ## @param gcp.projectID GCP Project ID where your cluster is deployed
  ## 
  projectID: ""
  ## @param gcp.projectRegion Region where your cluster is deployed
  ##
  projectRegion: ""
  ## @param gcp.projectZone Zone where your cluster is deployed
  ##
  projectZone: ""
  ## @param gcp.gcpLogging Enables GCP Cloud Logging
  ## ref https://cloud.google.com/logging
  ##
  gcpLogging: false
  ## @param gcp.gcpErrorReporting Enables GCP Cloud Error Reporting
  ## ref https://cloud.google.com/error-reporting/docs/grouping-errors
  ##
  gcpErrorReporting: false
## Turbinia service account parameters
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a service account should be created
  ##
  create: true
  ## @param serviceAccount.annotations Annotations to add to the service account
  ##
  annotations: {}
  ## @param serviceAccount.name The name of the service account to use
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name: "turbinia"
## Turbinia service parameters
##
service:
  ## @param service.type Turbinia service type
  ##
  type: ClusterIP
  ## @param service.port Turbinia api service port
  ##
  port: 8000
## Turbinia metrics parameters
## IMPORTANT: Turbinia utilizes Prometheus to scrape metrics through annotations
## Please ensure the Prometheus server is also installed to the cluster for metrics to scrape properly
##
metrics:
  ## @param metrics.enabled Enables metrics scraping
  ##
  enabled: true
  ## @param metrics.port Port to scrape metrics from
  ##
  port: 9200
## Turbinia persistence storage parameters
##
persistence:
  ## @param persistence.name Turbinia persistent volume name
  ##
  name: turbiniavolume
  ## @param persistence.size Turbinia persistent volume size
  ##
  size: 1T
  ## @param persistence.storageClass PVC Storage Class for Turbinia volume
  ## If default, storageClassName: <storageClass>, which enables GCP Filestore
  ##   when using the Filestore CSI Driver
  ##   ref https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/filestore-csi-driver#access
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ## ref https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/#using-dynamic-provisioning
  ## 
  storageClass: standard-rwx
  ## @param persistence.accessModes PVC Access Mode for Turbinia volume
  ## Access mode may need to be updated based on the StorageClass
  ## ref https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
  ## 
  accessModes:
    - ReadWriteMany
## Turbinia ingress parameters
##
ingress:
  ## @param ingress.enabled Enable the Turbinia loadbalancer for external access
  ##
  enabled: false
  ## @param ingress.host The domain name Turbinia will be hosted under
  ## Please ensure this value is set when enabling Ingress. If using "gce" for
  ## ingress.className, please ensure you have a DNS record set for the IP address
  ## registered under ingress.gcp.staticIPName
  ##
  host: ""
  ## @param ingress.className IngressClass that will be be used to implement the Ingress
  ## ref https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/
  ##
  className: "gce"
  ## GCP ingress configuration
  ##
  gcp:
    ## @param ingress.gcp.managedCertificates Enabled GCP managed certificates for your domain
    ## ref https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs
    ##
    managedCertificates: false
    ## @param ingress.gcp.staticIPName Name of the static IP address you reserved in GCP
    ## This is required when using "gce" in ingress.className
    ## ref https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address
    ##
    staticIPName: ""
## @section Redis configuration parameters
## IMPORTANT: Redis is deployed with Auth enabled by default
## To see a full list of available values, run helm show values charts/redis*
##
redis:
  ## @param redis.enabled enabled Enables the Redis deployment
  ##
  enabled: true
  ## @param redis.sentinel.enabled Enables Redis Sentinel on Redis pods
  ## IMPORTANT: This has not been tested for Turbinia so would leave this disabled
  ##
  sentinel:
    enabled: false
  ## Master Redis Service configuration
  ##
  master:
    ## @param redis.master.count Number of Redis master instances to deploy (experimental, requires additional configuration)
    ##
    count: 1
    ## Redis master service parameters
    ##
    service:
      ## @param redis.master.service.type Redis master service type
      ##
      type: ClusterIP
      ## @param redis.master.service.ports.redis Redis master service port
      ##
      ports:
        redis: 6379
    ## Redis master persistence configuration
    ##
    persistence:
      ## @param redis.master.persistence.size Persistent Volume size
      ##
      size: 8Gi
    ## Redis master resource requests and limits
    ## @param redis.master.resources.requests.cpu The requested cpu for the Redis master containers
    ## @param redis.master.resources.requests.memory The requested memory for the Redis master containers 
    ## @param redis.master.resources.limits.cpu The resources cpu limits for the Redis master containers
    ## @param redis.master.resources.limits.memory The resources memory limits for the Redis master containers
    ##
    resources:
      requests:
        cpu: 4000m
        memory: 8Gi
      limits:
        cpu: 8000m
        memory: 16Gi
  ## Redis replicas configuration parameters
  ##
  replica:
    ## @param redis.replica.replicaCount Number of Redis replicas to deploy
    ##
    replicaCount: 3
    ## Redis replicas service parameters
    ##
    service:
      ## @param redis.replica.service.type Redis replicas service type
      ##
      type: ClusterIP
      ## @param redis.replica.service.ports.redis Redis replicas service port
      ##
      ports:
        redis: 6379
    ## Redis replicas persistence configuration
    ##
    persistence:
      ## @param redis.replica.persistence.size Persistent Volume size
      ##
      size: 8Gi
    ## Redis Replica resource requests and limits
    ## @param redis.replica.resources.requests.cpu The requested cpu for the Redis replica containers
    ## @param redis.replica.resources.requests.memory The requested memory for the Redis replica containers 
    ## @param redis.replica.resources.limits.cpu The resources cpu limits for the Redis replica containers
    ## @param redis.replica.resources.limits.memory The resources memory limits for the Redis replica containers
    ##
    resources:
      requests:
        cpu: 4000m
        memory: 8Gi
      limits:
        cpu: 8000m
        memory: 16Gi 