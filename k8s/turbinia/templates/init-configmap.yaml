apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "turbinia.fullname" . }}-init-configmap
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "turbinia.labels" . | nindent 4 }}
data:
  init-turbinia.sh: |
    #!/bin/sh
    set -e

    # Fix Filestore permissions
    chmod go+w /mnt/turbiniavolume

    # Create turbinia config directory
    mkdir -p /etc/turbinia
    cd /etc/turbinia
    
    # Pull default config if one is not already provided
    {{- $userconfigs := .Files.Get .Values.config.override }}
    {{- if $userconfigs }}
    ls -lh /tmp/turbinia
    cp /tmp/turbinia/* /etc/turbinia/
    {{- else }}
    echo -n "* Fetching configuration files.." 
    # Fetch default Turbinia config file
    wget "https://raw.githubusercontent.com/google/turbinia/master/turbinia/config/turbinia_config_tmpl.py" -O turbinia.conf
    echo "OK"
    {{- end }}

    # Set up the Redis connection
    sed -i -e "s/^TASK_MANAGER = .*$/TASK_MANAGER = 'Celery'/g" turbinia.conf
    sed -i -e "s/^STATE_MANAGER = .*$/STATE_MANAGER = 'Redis'/g" turbinia.conf
    sed -i -e 's#^CELERY_BROKER =.*#CELERY_BROKER = {{ (include "turbinia.redis.url" .) | quote }}#' turbinia.conf
    sed -i -e 's#^CELERY_BACKEND =.*#CELERY_BACKEND = {{ (include "turbinia.redis.url" .) | quote }}#' turbinia.conf
    sed -i -e "s/^DEBUG_TASKS = .*$/DEBUG_TASKS = True/g" turbinia.conf

    # Set up Cloud provider (only supported option is GCP)
    sed -i -e "s/^CLOUD_PROVIDER = .*$/CLOUD_PROVIDER = 'GCP'/g" turbinia.conf
    sed -i -e "s/^TURBINIA_PROJECT = .*$/TURBINIA_PROJECT = '{{ include "turbinia.gcp.project" . }}'/g" turbinia.conf
    sed -i -e "s/^TURBINIA_ZONE = .*$/TURBINIA_ZONE = '{{ include "turbinia.gcp.zone" . }}'/g" turbinia.conf
    sed -i -e "s/^TURBINIA_REGION = .*$/TURBINIA_REGION = '{{ include "turbinia.gcp.region" . }}'/g" turbinia.conf
    
    # Setup logging, mount, and output paths
    sed -i -e "s/^SHARED_FILESYSTEM = .*$/SHARED_FILESYSTEM = True/g" turbinia.conf
    sed -i -e "s/^LOG_DIR = .*$/LOG_DIR = '\/mnt\/{{ .Values.persistence.name }}\/logs'/g" turbinia.conf
    sed -i -e "s/^MOUNT_DIR_PREFIX = .*$/MOUNT_DIR_PREFIX = '\/mnt\/turbinia'/g" turbinia.conf
    sed -i -e "s/^OUTPUT_DIR = .*$/OUTPUT_DIR = '\/mnt\/{{ .Values.persistence.name }}\/output'/g" turbinia.conf
    
    # Disable Turbinia Jobs
    sed -i -e "s/^DISABLED_JOBS = .*$/DISABLED_JOBS = {{ .Values.config.disabledJobs }}/g" turbinia.conf

    {{- if .Values.metrics.enabled }}
    # Set up Prometheus metrics
    sed -i -e "s/^PROMETHEUS_ENABLED = .*$/PROMETHEUS_ENABLED = True/g" turbinia.conf
    {{- end }}
    
    {{- if .Values.gcp.gcpLogging }}
    # Set up GCP Stackdriver Logging
    sed -i -e "s/^STACKDRIVER_LOGGING = .*$/STACKDRIVER_LOGGING = True/g" turbinia.conf
    {{- end }}
    # Set up GCP Stackdriver Traceback
    {{- if .Values.gcp.gcpErrorReporting }}
    sed -i -e "s/^STACKDRIVER_TRACEBACK = .*$/STACKDRIVER_TRACEBACK = True/g" turbinia.conf
    {{- end -}}