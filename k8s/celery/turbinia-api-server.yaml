apiVersion: apps/v1
kind: Deployment
metadata:
  name: turbinia-api-server
  labels:
    app: turbinia-api-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: turbinia-api-server
  template:
    metadata:
      annotations:
        prometheus.io/port: "9200"
        prometheus.io/scrape: "true"
      labels:
        app: turbinia-api-server
    spec:
      serviceAccountName: turbinia
      initContainers:
        - name: init-filestore
          image: busybox:1.28
          command: ['sh', '-c', 'chmod go+w /mnt/turbiniavolume']
          volumeMounts:
            - mountPath: "/mnt/turbiniavolume"
              name: turbiniavolume
      containers:
        - name: api
          image: us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-api-server:latest
          env:
            - name: TURBINIA_CONF
              valueFrom:
                configMapKeyRef:
                  name: turbinia-config
                  key: TURBINIA_CONF
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /mnt/turbiniavolume
              name: turbiniavolume
          ports:
            - containerPort: 9200
            - containerPort: 8000
            - containerPort: 8080
          resources: 
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "4096Mi"
              cpu: "2000m"
      volumes:
        - name: turbiniavolume
          persistentVolumeClaim:
            claimName: turbiniavolume-claim
            readOnly: false