[tool.poetry]
name = "turbinia"
version = "2023112"
description = "Automation and Scaling of Digital Forensics Tools"
authors = ["Turbinia Developers <turbinia-dev@googlegroups.com>"]
maintainers = ["Turbinia Developers <turbinia-dev@googlegroups.com>"]
license = "Apache"
readme = "README.md"
repository = "https://github.com/google/turbinia"
documentation = "https://turbinia.readthedocs.io/en/latest/"

[tool.poetry.scripts]
turbiniactl = "turbinia.turbiniactl:main"

[tool.poetry.dependencies]
python = "^3.10"
celery = { version = "^5.2.2" }
cryptography = { version = "*" }
docker = { version = "*" }
filelock = { version = "*" }
pycryptodomex = { version = "*" }
prometheus_client = { version = "*" }
libcloudforensics = { version = "20230601" }
pandas = { version = "*" }
pyparsing = { version = "*" }
#pyyaml = { version = "^5.4.1" }
pyOpenSSL = { version = "*" }
python-multipart = { version = "*"  }
redis = { version = "*" }
six = { version = "^1.15.0" }
urllib3 = { version = "*" }
vine = { version = "^5.0.0" }
PyJWT = { version = "*" }
idna = { version = "^2.10" }
fastapi = { version = ">=0.75.0" }
uvicorn = { version = ">=0.17.6" }
httpx = { version = "*" }
google-api-core = { version = "<2.0.0dev", optional = true }
google-api-python-client = { version = "*", optional = true }
google-auth = { version = "<2.0.0.dev0", optional = true }
google-cloud-core = { version = "<2.0dev", optional = true }
google-cloud-datastore = { version = "<=2.0.0", optional = true }
google-cloud-error-reporting = { version = "*", optional = true }
google-cloud-logging = { version = ">=2.0.0,<3.0.0dev", optional = true }
google-cloud-pubsub = { version = "1.7.0", optional = true }
google-cloud-storage = { version = "<=2.2.1", optional = true }
grpcio-status = { version = "<1.49.0,>=1.33.2", optional = true }
protobuf = { version = ">=3.19.0,<4.0.0dev", optional = true }
proto-plus = { version = "<2.0.0dev,>=1.22.0", optional = true }
psq = { version = "*", optional = true }
dfvfs = { version = ">=20210606", optional = true }
cffi = { version = ">=1.9.1", optional = true }
dfdatetime = { version = ">=20210509", optional = true }
dfimagetools = { version = ">=20220312", optional = true }
dtfabric = { version = ">=20170524", optional = true }
libbde-python = { version = ">=20140531", optional = true }
libewf-python = { version = ">=20131210", optional = true }
libfsapfs-python = { version = ">=20201107", optional = true }
libfsext-python = { version = ">=20210721", optional = true }
libfshfs-python = { version = ">=20210722", optional = true }
libfsntfs-python ={ version = ">=20200921", optional = true }
libfsxfs-python = { version = ">=20210726", optional = true }
libfvde-python = { version = ">=20160719", optional = true }
libfwnt-python = { version = ">=20210717", optional = true }
libluksde-python = { version = ">=20200101", optional = true }
libmodi-python = { version = ">=20210405", optional = true }
libqcow-python = { version = ">=20201213", optional = true }
libsigscan-python = { version = ">=20191221", optional = true }
libsmdev-python = { version = ">=20140529", optional = true }
libsmraw-python = { version = ">=20140612", optional = true }
libvhdi-python = { version = ">=20201014", optional = true }
libvmdk-python = { version = ">=20140421", optional = true }
libvsgpt-python = { version = ">=20210207", optional = true }
libvshadow-python = { version = ">=20160109", optional = true }
libvslvm-python = { version = ">=20210807", optional = true }
dfDewey = { version = "^20220603", optional = true }
pyhindsight = { version = "*", optional = true }
impacket = { version = "*", optional = true }

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
coverage = "*"
fakeredis = ">=1.8.1"
mock = "*"
pytest = "*"
tox = "*"
yapf = "*"

[tool.poetry.extras]
worker = [
  "dfvfs",
  "cffi",
  "dfdatetime",
  "dfimagetools",
  "dtfabric",
  "libbde-python",
  "libewf-python",
  "libfsapfs-python",
  "libfsext-python",
  "libfshfs-python",
  "libfsntfs-python",
  "libfsxfs-python",
  "libfvde-python",
  "libfwnt-python",
  "libluksde-python",
  "libmodi-python",
  "libqcow-python",
  "libsigscan-python",
  "libsmdev-python",
  "libsmraw-python",
  "libvhdi-python",
  "libvmdk-python",
  "libvsgpt-python",
  "libvshadow-python",
  "libvslvm-python",
  "dfDewey",
  "pyhindsight",
  "impacket",
]

gcp = [
  "google-api-core",
  "google-api-python-client",
  "google-auth",
  "google-cloud-coverage",
  "google-cloud-datastore",
  "google-cloud-error-reporting",
  "google-cloud-logging",
  "google-cloud-pubsub",
  "google-cloud-storage",
  "grpcio-status",
  "protobuf",
  "proto-plus",
  "psq",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
