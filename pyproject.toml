[tool.poetry]
name = "turbinia"
version = "20231002"
description = "Automation and Scaling of Digital Forensics Tools"
authors = ["Turbinia Developers <turbinia-dev@googlegroups.com>"]
maintainers = ["Turbinia Developers <turbinia-dev@googlegroups.com>"]
license = "Apache"
readme = "README.md"
repository = "https://github.com/google/turbinia"
documentation = "https://turbinia.readthedocs.io/en/latest/"

[tool.poetry.scripts]
turbiniactl = "turbinia.turbiniactl:main"

[tool.poetry.dependencies]
python = "^3.10"
celery = { version = "^5.2.2" }
dfdatetime = { version = "^20230506", optional = true }
dfDewey = { version = "^20220603", optional = true }
dfimagetools = { version = "^20230806", optional = true }
dfvfs = { version = "^20230531", optional = true }
docker = { version = "^6.1.3" }
dtfabric = { version = "^20230520", optional = true }
fastapi = {extras = ["all"], version = "^0.103.1"}
filelock = { version = "*" }
# TODO: Remove all Google Cloud dependencies once code/tests are deprecated
google-api-core = { version = "<2.0.0dev", optional = true }
google-api-python-client = { version = "*", optional = true }
google-auth = { version = "<2.0.0.dev0", optional = true }
google-cloud-core = { version = "<2.0dev", optional = true }
google-cloud-datastore = { version = "<=2.0.0", optional = true }
google-cloud-error-reporting = { version = "*", optional = true }
google-cloud-logging = { version = ">=2.0.0,<3.0.0dev", optional = true }
google-cloud-pubsub = { version = "1.7.0", optional = true }
google-cloud-storage = { version = "<=2.2.1", optional = true }
grpcio-status = { version = "<1.49.0,>=1.33.2", optional = true }
libcloudforensics = { version = "20230601" }
pandas = { version = "^2.1.0" }
plaso = { version = "^20230717", optional = true }
prometheus_client = { version = "^0.17.1" }
protobuf = { version = ">=3.19.0,<4.0.0dev", optional = true }
proto-plus = { version = "<2.0.0dev,>=1.22.0", optional = true }
psq = { version = "*", optional = true }
pyhindsight = { version = "^20230327.0", optional = true }
pyparsing = { version = "^3.0.9" }
redis = { version = "^4.4.4" }
six = { version = "^1.15.0" }
uvicorn = { version = "^0.17.6" }

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
coverage = "*"
fakeredis = "^1.8.1"
mock = "*"
pytest = "*"
yapf = "*"

[tool.poetry.extras]
worker = [
  "dfdatetime",
  "dfimagetools",
  "dfDewey",
  "dfvfs",
  "dtfabric",
  "plaso",
  "pyhindsight",
]

gcp = [
  "google-api-core",
  "google-api-python-client",
  "google-auth",
  "google-cloud-coverage",
  "google-cloud-datastore",
  "google-cloud-error-reporting",
  "google-cloud-logging",
  "google-cloud-pubsub",
  "google-cloud-storage",
  "grpcio-status",
  "protobuf",
  "proto-plus",
  "psq",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
