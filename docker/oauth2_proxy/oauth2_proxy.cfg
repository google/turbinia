# OAuth2-proxy ip/port
http_address = "0.0.0.0:8080"

# Turbinia API server URL
upstreams = [
    "http://127.0.0.1:8000/"
]

# Turbinia OIDC client id and secret from your provider
client_id = "<CLIENT_ID>"
client_secret = "<CLIENT_SECRET>"
provider="oidc"

# Do not change the redirect URI - this should be the OAuth2-proxy callback URL
redirect_url = "http://localhost:8080/oauth2/callback"

# Set oidc_issuer_url, oidc_jwks_url and scope to your provider specific URLs
oidc_issuer_url="https://accounts.google.com"
oidc_jwks_url="https://accounts.google.com/.well-known/openid-configuration"
scope="https://www.googleapis.com/auth/userinfo.email"
# Uncomment the line below and add any extra Client IDs if needed
#oidc_extra_audiences = "<additional_client_ids>"

# A local file with a list of authorized email addresses
# One email address per line
authenticated_emails_file = "/etc/turbinia/auth.txt"

# Alternative authorization per domain instead of user emails
#email_domains = [ "google.com"]

# Secret used with the oauth2-proxy session cookies
cookie_secret="<random_32_bytes_string>"

# DO NOT EDIT BELOW THIS LINE
skip_jwt_bearer_tokens=true
force_code_challenge_method='S256'
logging_filename = "/tmp/oauth2proxy.log"
standard_logging = true
standard_logging_format = "[{{.Timestamp}}] [{{.File}}] {{.Message}}"
request_logging = true
request_logging_format = "{{.Client}} - {{.Username}} [{{.Timestamp}}] {{.Host}} {{.RequestMethod}} {{.Upstream}} {{.RequestURI}} {{.Protocol}} {{.UserAgent}} {{.StatusCode}} {{.ResponseSize}} {{.RequestDuration}}"
auth_logging = true
auth_logging_format = "{{.Client}} - {{.Username}} [{{.Timestamp}}] [{{.Status}}] {{.Message}}"
show_debug_on_error=true
#pass_user_headers=true
#pass_authorization_header=true
#pass_access_token=true
